// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CheckWaterNumberJobTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("檢查單別流水是否連續", Description="\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
        "f two numbers", SourceFile="檢查單別流水是否連續.feature", SourceLine=1)]
    public partial class 檢查單別流水是否連續Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "檢查單別流水是否連續.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("zh-TW"), "檢查單別流水是否連續", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("進行單別流水號檢查", new string[] {
                "mytag"}, SourceLine=7)]
        public virtual void 進行單別流水號檢查()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("進行單別流水號檢查", new string[] {
                        "mytag"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "VCH_TY",
                        "VCH_NO",
                        "VCH_DT"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104001",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104002",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104003",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104004",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104005",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104006",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104007",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104008",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104009",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104010",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104011",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104012",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104013",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104014",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104015",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104016",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104017",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104018",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104019",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104020",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104021",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104022",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104023",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104024",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104025",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104026",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104027",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104028",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104029",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104030",
                        "2017/1/4"});
            table1.AddRow(new string[] {
                        "F712",
                        "170104031",
                        "2017/1/4"});
#line 9
 testRunner.Given("目前製令單中有單別資料如下", ((string)(null)), table1, "假設");
#line 42
 testRunner.When("進行檢查時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "VCH_TY",
                        "VCH_NO",
                        "VCH_DT"});
            table2.AddRow(new string[] {
                        "F711",
                        "170101001",
                        "2017/01/01"});
#line 43
 testRunner.Then("會有以下資料的產生", ((string)(null)), table2, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
